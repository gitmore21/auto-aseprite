name: Auto build Aseprite

on:
  push:
    branches: ["main"]

permissions:
  contents: write

jobs:
  auto-build:
    name: Auto build Aseprite for Windows x64
    runs-on: windows-2022

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ninja
        run: |
          choco install ninja -y

      - name: Install Python requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download libjpeg-turbo (Manual)
        run: |
          Invoke-WebRequest -Uri "https://github.com/libjpeg-turbo/libjpeg-turbo/archive/refs/tags/2.1.91.zip" -OutFile "libjpeg-turbo-main.zip"
          7z x libjpeg-turbo-main.zip -o"skia/third_party/externals"
          Move-Item -Path "skia/third_party/externals/libjpeg-turbo-2.1.91" -Destination "skia/third_party/externals/libjpeg-turbo"
          Remove-Item libjpeg-turbo-main.zip

      - name: Checkout Skia
        uses: actions/checkout@v4
        with:
          repository: aseprite/skia
          ref: m102-861e4743af
          path: skia

      - name: Install vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git && .\vcpkg\bootstrap-vcpkg.bat

      - name: Set VCPKG_ROOT
        run: echo "VCPKG_ROOT=$PWD/vcpkg" >> $env:GITHUB_ENV

      - name: Clear vcpkg cache
        run: |
          Remove-Item -Recurse -Force "$env:VCPKG_ROOT\downloads"
          Remove-Item -Recurse -Force "$env:VCPKG_ROOT\buildtrees"
          Remove-Item -Recurse -Force "$env:VCPKG_ROOT\packages"

      - name: Install dependencies using vcpkg
        run: |
          .\vcpkg\vcpkg install boost:x64-windows-static
          .\vcpkg\vcpkg install luajit:x64-windows-static
          .\vcpkg\vcpkg install openssl:x64-windows-static
          .\vcpkg\vcpkg install libmariadb:x64-windows-static
          .\vcpkg\vcpkg install gmp:x64-windows-static
          .\vcpkg\vcpkg integrate install

      - name: Setup MSVC Developer Command Prompt
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Build Skia
        run: |
          cd skia
          python tools/git-sync-deps
          python gn/gn.py gen out/Release-x64 "--args=is_official_build=true skia_use_system_libjpeg_turbo=false skia_use_system_libpng=false skia_use_system_libwebp=false skia_use_system_zlib=false"
          ninja -C out/Release-x64

      - name: Build Aseprite
        run: |
          mkdir build
          cd build
          cmake "../aseprite" -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DLAF_BACKEND=skia -DSKIA_DIR="../../skia" -DSKIA_LIBRARY_DIR="../../skia/out/Release-x64" -DSKIA_LIBRARY="../../skia/out/Release-x64/skia.lib"
          ninja aseprite
          copy "C:/Windows/System32/libcrypto-1_1-x64.dll" ./bin

      - name: Get version
        id: get_version
        run: |
          $version = Get-Content version.txt
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Zip Aseprite
        run: |
          cd build/bin
          7z a ../../Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}.zip *

      - name: GH Release
        uses: softprops/action-gh-release@v2.0.4
        with:
          name: Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}
          tag_name: ${{ steps.get_version.outputs.version }}
          files: |
            Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}.zip
