name: Build TFS 1.4

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Update pip
      run: python -m pip install --upgrade pip

    - name: Install gdown
      run: pip install gdown

    - name: Download Server.zip from Google Drive
      run: |
        gdown --fuzzy 1mbP66SZCS0jK7DKeQKb3PcvdgtmDdDNq -O Server.zip

    - name: Check if Server.zip exists
      id: check_files
      uses: andstor/file-existence-action@v2
      with:
        files: "Server.zip"

    - name: Fail if download failed
      if: ${{ steps.check_files.outputs.files_exists == 'false' }}
      run: exit 1

    - name: Extract Server.zip
      run: |
        Expand-Archive -Path Server.zip -DestinationPath .\server

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Clone vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git ${{ github.workspace }}/vcpkg

    - name: Bootstrap vcpkg
      run: |
        cd ${{ github.workspace }}/vcpkg
        .\bootstrap-vcpkg.bat

    - name: Install Dependencies via vcpkg
      run: |
        cd ${{ github.workspace }}/vcpkg
        ./vcpkg install --triplet x64-windows --x-manifest-root=${{ github.workspace }} 

    - name: Configure CMake
      shell: pwsh
      run: |
        cd ${{ github.workspace }}
        cmake -B build -S server/Server `
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake `
        -DVCPKG_TARGET_TRIPLET=x64-windows `
        -DCMAKE_BUILD_TYPE=Release `
        -DUSE_LUAJIT=ON `
        -DCMAKE_VERBOSE_MAKEFILE=ON

    - name: Build Project
      run: |
        cd ${{ github.workspace }}/build
        cmake --build . --config Release --verbose

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: tfs-windows-build
        path: ${{ github.workspace }}/build/Release/tfs.exe
