name: Build TFS

on:
  push:
    branches: ["main"] # Ajuste para a branch principal do seu projeto, ex: master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-tfs:
    name: Build TFS (Windows x64)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install CMake
        run: choco install cmake -y

      - name: Install Ninja
        run: choco install ninja -y

      - name: Install vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git && .\vcpkg\bootstrap-vcpkg.bat

      - name: Set VCPKG_ROOT
        run: echo "VCPKG_ROOT=$PWD/vcpkg" >> $env:GITHUB_ENV

      - name: Install dependencies using vcpkg
        run: |
          .\vcpkg\vcpkg install boost:x64-windows-static
          .\vcpkg\vcpkg install libmariadb:x64-windows-static
          .\vcpkg\vcpkg install libmysql:x64-windows-static
          .\vcpkg\vcpkg install lua:x64-windows-static
          .\vcpkg\vcpkg install libxml2:x64-windows-static
          .\vcpkg\vcpkg install zlib:x64-windows-static
          .\vcpkg\vcpkg install openssl:x64-windows-static
          .\vcpkg\vcpkg install cryptopp:x64-windows-static
          .\vcpkg\vcpkg install gmp:x64-windows-static          
          .\vcpkg\vcpkg integrate install

      - name: Setup MSVC Developer Command Prompt
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Create Build Directory
        run: mkdir build

      - name: Configure CMake
        working-directory: ./build
        run: |
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="%VCPKG_ROOT%\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON

      - name: Build TFS
        working-directory: ./build
        run: ninja

      - name: Rename Executable
        working-directory: ./build
        run: |
          Rename-Item forgottenserver.exe tfs.exe

      - name: Create Artifacts Directory
        run: mkdir artifacts

      - name: Copy Executable and Dependencies
        run: |
          Copy-Item build/tfs.exe artifacts/
          # Adicione aqui quaisquer DLLs que foram compiladas com o projeto e são necessárias na execução
          # Exemplo: Copy-Item build/my_custom_dll.dll artifacts/ 

      - name: Zip Artifacts
        run: |
          Compress-Archive -Path artifacts/* -DestinationPath tfs-windows-x64.zip

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: TFS Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            tfs-windows-x64.zip
